name: 编译内核

on: [ push, workflow_dispatch ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with: { path: kernel }

    - name: 初始化子模块
      working-directory: kernel
      run: git submodule update --init --remote --recursive

    - name: 安装软件包
      run: sudo apt update && sudo apt install binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi

    - name: 缓存工具链
      id: cache-toolchains
      uses: actions/cache@v4
      with:
        path:
          clang/
          gcc32/
          gcc64/
        key: toolchains-android12

    - name: 下载编译器
      if: steps.cache-toolchains.outputs.cache-hit != 'true'
      run: |
        git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9.git -b android12-release --depth=1 gcc64

        git clone  https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9.git -b android12-release --depth=1 gcc32

        mkdir -p clang
        curl -LSs "https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android12-release/clang-r416183b.tar.gz" | tar xz -C clang

    - name: 设置ccache缓存
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: mt6853
        restore-key: mt6853
        max-size: 5G

    - name: 编译内核
      working-directory: kernel
      run: |
        export PATH=$GITHUB_WORKSPACE/clang/bin:$GITHUB_WORKSPACE/gcc64/bin:$GITHUB_WORKSPACE/gcc32/bin:$PATH
        make -s -j$(nproc --all) O=${{ runner.temp }}/make ARCH=arm64 mt6853-ss_defconfig
        make -s -j$(nproc --all) CC="ccache clang" O=${{ runner.temp }}/make ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- LD=ld.lld LOCALVERSION=-awkoo

    - name: 打包AnyKernel3
      run: |
       git clone https://github.com/osm0sis/AnyKernel3 --depth=1 ak3
       cd ak3
       rm -rf .git .github LICENSE README.md
       cat >anykernel.sh <<EOF
       properties() { '
       kernel.string=Kernel for mt6853
       do.devicecheck=0
       '; }
       block=auto
       is_slot_device=auto
       ramdisk_compression=auto
       patch_vbmeta_flag=auto
       . tools/ak3-core.sh
       split_boot
       flash_boot
       EOF
       cp ${{ runner.temp }}/make/arch/arm64/boot/Image.gz-dtb .
       zip -q -r AnyKernel3.zip *

    - name: 发布
      uses: softprops/action-gh-release@v2
      with:
        tag_name: awkoo
        name: Kernel build awkoo
        files: |
            ak3/AnyKernel3.zip
            ak3/Image.gz-dtb

